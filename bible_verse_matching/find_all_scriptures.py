
# autogenerated by regex.py
import re

find_all_scriptures = re.compile("""(?:^|\W)
(
(?P<genesis>gen\w{0,4}\.?) # genesis           
|(?P<exodus>exo\w{0,3}\.?) # exodus            
|(?P<leviticus>lev\w{0,6}\.?) # leviticus         
|(?P<numbers>num\w{0,4}\.?) # numbers           
|(?P<deuteronomy>deu\w{0,8}\.?) # deuteronomy       
|(?P<joshua>jos\w{0,3}\.?) # joshua            
|(?P<judges>judg\w{0,2}\.?) # judges            
|(?P<ruth>rut\w{0,1}\.?) # ruth              
|(?P<i_samuel>1\s*sam\w{0,3}\.?|i\s+sam\w{0,3}\.?) # 1 samuel          
|(?P<ii_samuel>2\s*sam\w{0,3}\.?|ii\s+sam\w{0,3}\.?) # 2 samuel          
|(?P<i_kings>1\s*kin\w{0,2}\.?|i\s+kin\w{0,2}\.?) # 1 kings           
|(?P<ii_kings>2\s*kin\w{0,2}\.?|ii\s+kin\w{0,2}\.?) # 2 kings           
|(?P<i_chronicles>1\s*chr\w{0,7}\.?|i\s+chr\w{0,7}\.?) # 1 chronicles      
|(?P<ii_chronicles>2\s*chr\w{0,7}\.?|ii\s+chr\w{0,7}\.?) # 2 chronicles      
|(?P<ezra>ezr\w{0,1}\.?) # ezra              
|(?P<nehemiah>neh\w{0,5}\.?) # nehemiah          
|(?P<esther>est\w{0,3}\.?) # esther            
|(?P<job>jo\w{0,1}\.?) # job               
|(?P<psalm>(?:pss|psa)\w{0,2}\.?) # psalm
|(?P<proverbs>pro\w{0,5}\.?) # proverbs
|(?P<ecclesiastes>ecc\w{0,9}\.?) # ecclesiastes      
|(?P<song_of_solomon>songs?\W+of\W+solomon\.?) # song of solomon
|(?P<isaiah>isa\w{0,3}\.?) # isaiah            
|(?P<jeremiah>jer\w{0,5}\.?) # jeremiah          
|(?P<lamentations>lam\w{0,9}\.?) # lamentations      
|(?P<ezekiel>eze\w{0,4}\.?) # ezekiel           
|(?P<daniel>dan\w{0,3}\.?) # daniel            
|(?P<hosea>hos\w{0,2}\.?) # hosea             
|(?P<joel>joe\w{0,1}\.?) # joel              
|(?P<amos>amo\w{0,1}\.?) # amos              
|(?P<obadiah>oba\w{0,4}\.?) # obadiah           
|(?P<jonah>jon\w{0,2}\.?) # jonah             
|(?P<micah>mic\w{0,2}\.?) # micah             
|(?P<nahum>nah\w{0,2}\.?) # nahum             
|(?P<habakkuk>hab\w{0,5}\.?) # habakkuk          
|(?P<zephaniah>zep\w{0,6}\.?) # zephaniah         
|(?P<haggai>hag\w{0,3}\.?) # haggai            
|(?P<zechariah>zec\w{0,6}\.?) # zechariah         
|(?P<malachi>mal\w{0,4}\.?) # malachi           
|(?P<matthew>mat\w{0,4}\.?) # matthew           
|(?P<mark>mar\w{0,1}\.?) # mark              
|(?P<luke>luk\w{0,1}\.?) # luke              
|(?P<john>joh\w{0,1}\.?) # john              
|(?P<acts>act\w{0,1}\.?) # acts              
|(?P<romans>rom\w{0,3}\.?) # romans            
|(?P<i_corinthians>1\s*cor\w{0,8}\.?|i\s+cor\w{0,8}\.?) # 1 corinthians     
|(?P<ii_corinthians>2\s*cor\w{0,8}\.?|ii\s+cor\w{0,8}\.?) # 2 corinthians     
|(?P<galatians>gal\w{0,6}\.?) # galatians         
|(?P<ephesians>eph\w{0,6}\.?) # ephesians         
|(?P<philippians>phili\w{0,6}\.?) # philippians       
|(?P<colossians>col\w{0,7}\.?) # colossians        
|(?P<i_thessalonians>1\s*the\w{0,10}\.?|i\s+the\w{0,10}\.?) # 1 thessalonians   
|(?P<ii_thessalonians>2\s*the\w{0,10}\.?|ii\s+the\w{0,10}\.?) # 2 thessalonians   
|(?P<i_timothy>1\s*tim\w{0,4}\.?|i\s+tim\w{0,4}\.?) # 1 timothy         
|(?P<ii_timothy>2\s*tim\w{0,4}\.?|ii\s+tim\w{0,4}\.?) # 2 timothy         
|(?P<titus>tit\w{0,2}\.?) # titus             
|(?P<philemon>phile\w{0,3}\.?) # philemon          
|(?P<hebrews>heb\w{0,4}\.?) # hebrews           
|(?P<james>(?:jas|jam)\w{0,2}\.?) # james
|(?P<i_peter>1\s*pet\w{0,2}\.?|i\s+pet\w{0,2}\.?) # 1 peter           
|(?P<ii_peter>2\s*pet\w{0,2}\.?|ii\s+pet\w{0,2}\.?) # 2 peter           
|(?P<i_john>1\s*joh\w{0,1}\.?|i\s+joh\w{0,1}\.?) # 1 john            
|(?P<ii_john>2\s*joh\w{0,1}\.?|ii\s+joh\w{0,1}\.?) # 2 john            
|(?P<iii_john>3\s*joh\w{0,1}\.?|iii\s+joh\w{0,1}\.?) # 3 john            
|(?P<jude>jude\w{0,0}\.?) # jude              
|(?P<revelation>rev\w{0,7}\.?) # revelation        
)
\s+(?P<verse>\d{1,3}\s*:\s*\d{1,3})
""",re.VERBOSE|re.MULTILINE).finditer

def filtergroupdict(ma):
    """Remove all entries with values == None"""
    di = filter(lambda x: x[1]!=None and x[0]!='verse', ma.groupdict().items())

    if len(di) != 1:
        return None

    ret = {}
    ret['book'] = di[0][0]
    ret['verse'] = ma.groupdict()['verse']
    ret['verse'] = ret['verse'].replace(' ','')
    return ret

